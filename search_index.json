[["index.html", "The CaRDO Handbook Chapter 1 About", " The CaRDO Handbook James Retell, Sean Francis, James Rene &amp; Peter Baade Chapter 1 About Cancer Registry Data Online Welcome to CaRDO. CaRDO is a user-friendly R package for creating interactive R-Shiny dashboards that visualize and publish population-level cancer statistics. Designed for users with little to no R or R-Shiny experience, CaRDO provides an accessible way to visually explore and communicate detailed cancer data with just a few clicks, all while maintaining strict data privacy. Click here to see an example dashboard created with CaRDO Get started "],["get-started.html", "Chapter 2 Get Started 2.1 R &amp; RStudio", " Chapter 2 Get Started This Handbook is a detailed guide to building your own CaRDO dashboard. Setting up your CaRDO dashboard is a simple and straightforward process, and this guide will walk you through it step by step. Our goal is to make it easy for you to visualize and publish your cancer data with confidence. If at any point you run into issues or have any questions or concerns, please reach out to us at statistics@cancerqld.org.au. CaRDO is an R package and requires R and RStudio to work. If you’re new to these software, don’t stress, we walk you through the installation and setup of these software below. If you already have R and RStudio installed then jump ahead to Install CaRDO If you prefer learning by doing and only referring to manuals as a last resort, you can follow the bare bones Quick Setup. However, we do not recommend this approach for first time CaRDO users. 2.1 R &amp; RStudio R and RStudio are easy to install freely available software. First download R software here and install. Being mindful to download the correct version for your computer’s operating system (Windows, Mac etc.). Once downloaded, run the R executable file and accept the default (recommended) installation options. Once R is installed, download the free version of RStudio here and install. Open RStudio to confirm that it works. Note, if you are working within an organisation, you may need to contact your IT team to install both R and RStudio. What are these software? Base R is not very user-friendly, and we won’t use it again here. However, it is necessary for RStudio to work. Think of RStudio as a program like Microsoft Word – but instead of helping you write language, it helps you write code in R. RStudio is far more user-friendly, and we will use it to build your CaRDO dashboard. The RStudio console is where you can type and run R commands interactively. It displays the output of your code, including results, warnings, and error messages, helping you test and explore R functions in real time. This is where we will run code to setup and build a CaRDO dashboard. Note: R and RStudio are case sensitive. Any code detailed here should be copied into RStudio exactly as it appears here. For readers wishing to learn more about R and RStudio, detailed learning material – well beyond what is required for CaRDO – is available here. Now that you have RStudio installed and working, lets Install CaRDO. Install CaRDO "],["install-cardo.html", "Chapter 3 Install CaRDO", " Chapter 3 Install CaRDO The following CaRDO installation steps only need to be performed once. However, if R is re-installed, these steps will need to be performed again. Step 1. Open RStudio Step 2. Install the required R packages. CaRDO relies on a few essential R packages that are not included within the CaRDO package to function properly. The required packages are DevTools, Tidyverse, Plotly &amp; Markdown. To install these packages, copy and paste the following code into your RStudio console and press Enter/Return. If you already have these packages installed, skip this step install.packages(&quot;devtools&quot;) install.packages(&quot;tidyverse&quot;) install.packages(&quot;plotly&quot;) install.packages(&quot;markdown&quot;) Step 3. Download and install CaRDO The CaRDO package is stored on a GitHub repository - https://github.com/CCQResearch/CaRDO. To install the CaRDO package, copy and paste the following code into your RStudio console and press Enter/Return. devtools::install_github(&quot;https://github.com/CCQResearch/CaRDO&quot;) RStudio may issue a warning if you do not have RTools installed. The warning can be dismissed in this instance - RTools is not required for CaRDO. You’ve installed CaRDO! The next step is to launch CaRDO and begin building your dashboard. We strongly recommend new users start with our simple CaRDO Example. The CaRDO example provides a quick and structured way to explore CaRDO’s functionality using example data. Using the example data first will help you understand the process and see what’s possible before working with your own data, which will require some careful preparation to meet specific requirements. If you do not wish work through a quick example, you may skip ahead to Data Requirements and begin preparing your data. CaRDO Example "],["cardo-example.html", "Chapter 4 CaRDO Example 4.1 Example Datasets 4.2 Launch CaRDO", " Chapter 4 CaRDO Example 4.1 Example Datasets Below are three example datasets that we will use to build an example CaRDO dashboard. These datasets are designed to illustrate how cancer incidence, mortality, and population data should be structured and how they will be visualised in CaRDO. Download the datasets and store them on your computer - in a moment we’ll load these datasets into CaRDO. Cancer Incidence Dataset: An example dataset containing cancer diagnoses by cancer type, year, sex, and 5-year age group. Cancer Mortality Dataset: An example dataset containing cancer deaths by cancer type, year, sex, and 5-year age group. Population Dataset: An example dataset containing population estimates by year, sex, and 5-year age group, which can be used for calculating age-standardised cancer rates. These datasets are fictional and do not reflect real cancer data 4.2 Launch CaRDO Step 1. Open RStudio. Step 2. Set your working directory (optional). This is where you want to save your CaRDO dashboard application. You can set your working directory by typing the following command into the RStudio console – specifying your directory between the quotations. For data security reasons, we recommend setting your working directory to a local drive that is not regularly synced to a cloud service. This precaution helps prevent any (extremely unlikely) data exposure. setwd(&quot;/path/to/my/directory&quot;)` Alternatively, you can set the working directory using RStudio’s menu system Session –&gt; Set Working Directory –&gt; Choose Directory… Step 3. Launch CaRDO. To laucnh CaRDO, copy and paste the following code into your RStudio console and press Enter/Return. This step will open the CaRDO user interface in a web browser. CaRDO::create_dashboard() Step 4. Welcome to CaRDO. CaRDO begins with a disclaimer. The information is a summary of Data Requirements and Data Privacy details. We recommend reading these sections of the handbook in detail before loading your own data into CaRDO. However, for now, click Okay, I understand then Next. Step 5. Load datasets. Select Incidence, Mortality and Population and load in the three example datasets previously downloaded. All datasets you wish to load into CaRDO must be done at this step - all at once. Select an appropriate standard population for rate calculations then click Next If you’re at this step with your own data, select only those datasets that you have available. Step 6. Specify your variables Rather than force users to label their variables a specific way, CaRDO asks users to match their supplied variables with the key CaRDO indicator variables. Match each CaRDO variable listed on the left with the variables within each dataset - this step must be performed separately for each dataset loaded into CaRDO. Take care at this step to ensure that the correct variables are specified. Your variable names will appear in the drop down fields Step 7. Finalise your dashboard. Give your dashboard a title and specify the specific area that your cancer data covers. For example, is your data from a specific country, state or province, city or health region? On this page, you are also asked to specify whether the loaded cancer incidence and mortality datasets contain an ‘All cancers’ category. This refers to a row/rows that sum up the total number of cancer diagnoses or deaths for all cancers combined - often ladeled as ‘All cancers’. This is different from only having individual cancer types like lung or breast cancer in the dataset. It’s important to know because it affects how CaRDO will calculate totals and display summary statistics. We strongly recommend including an ‘All cancers’ category in your cancer datasets for reasons discussed further in the Data Requirements section. The example cancer datasets contain an ‘All cancers’ category so we will leave ‘Yes’ selected. Finally, the suppression threshold allows users to suppress any values in the dataset below the specified value (if this hasn’t already been done during data preparation). This feature is designed as a safety mechanism — a final layer of protection in case suppression wasn’t handled beforehand loading your data. Leave this at 5 for now and click Create Dashboard. Step 8. Open your dashboard CaRDO will provide you with code to open your dashboard application (.app) file. Follows these exact steps. Click Copy to clipboard Click Exit CaRDO. 3, Paste the code into your R console and press Enter/Return. Be sure to exit the CaRDO interface before running the code, as R won’t execute the code while the CaRDO interface is still open! file.edit(&#39;your/working/directory/app.R&#39;) Alternatively, CaRDO will provide you with a local file path (your R working directory) to your dashboard application. Follow the path and open the ‘app’ file - this is your CaRDO application. Run the R code by clicking ‘Run’ in the top right of the R console. You’ve done it! Start exploring the dashboard by cycling through the available filters. In the next section, we’ll guide you through the specific Data Requirements for building a CaRDO dashboard using your own data. Data Requirements Finished building your CaRDO dashboard with your own data? Learn how to publish it here. "],["data-requirements.html", "Chapter 5 Data Requirements 5.1 The basic dashboard 5.2 Other data details to note", " Chapter 5 Data Requirements Important: Data loaded into CaRDO are stored locally on your computer, and all analyses are performed locally. Your data will not leave your computer while using CaRDO. Options to publish the dashboard you develop using CaRDO (e.g., share it online) are described later. If you do publish it, it is your responsibility to ensure that all data shown in the CaRDO dashboard is appropriate for sharing. See data privacy for more details. 5.1 The basic dashboard The type of CaRDO dashboard you’re able to create will depend on the breadth of data you have available. The simplest dashboard available is a display of cancer incidence count data, and the data necessary to generate this minimum dashboard are listed below. Cancer type Counts (number of diagnoses) Diagnosis year Age at diagnosis (5-year age groups) Sex Note: The specific names of these variables in your dataset do not matter, only that these data are available. More expansive dashboards are possible where additional variables are available, and we cover those options in Expand Your Dashboard. But first, there are three key requirements for all cancer datasets loaded into CaRDO. 5.1.1 Data structure Your data must be in the following structure (variable names do not matter) Cancer Count Year Age.group Sex Liver 25 2018 12 1 Breast (Female) 52 2003 15 2 Colorectal 28 2007 9 2 Prostate 51 2019 6 1 All cancers 275 2019 13 2 You must have a single column for each variable and outcome you wish to report, and each row in your dataset should correspond to a unique combination of each variable. Refer back to the Example Datasets for further guidance. 5.1.2 Cancer types Cancer-type values must be coded as you wish them to be displayed (see example above). For example, liver cancer should be coded as ‘Liver’ or ‘Liver cancer’ and not as a numerical value. Numerical coding will cause cancer types to display as numbers in the dashboard and be uninterpretable for users who don’t know the coding scheme. 5.1.3 5-year age groups Cancer counts must be aggregated by 5-year age groups, with age groups coded numerically from 1–18. You do not need to supply data for every age group listed in the table below. However, any data you do provide must use the correct age group code, as defined in the table. For example, if you don’t have data for the 0–4 years age group (code 1), but you do have data for the 5–9 years group, it must still be coded as 2 — not 1. Age.group Age.group.numeric 0-4 1 5-9 2 10-14 3 15-19 4 20-24 5 25-29 6 30-34 7 35-39 8 40-44 9 45-49 10 50-54 11 55-59 12 60-64 13 65-69 14 70-74 15 75-79 16 80-84 17 85+ 18 5-year age groups are necessary for two reasons. Firstly, a standard format is required for CaRDO to aggregate data and display cancer counts by broad age groups. Secondly, where age-standardized rates are being calculated, 5-year age groups are required. Note, counts by 5-year age groups will NOT be displayed visually in the dashboard and will not be published online. CaRDO will only display and publish counts by the following broad age-groups. Broad.age.group 0-34 35-49 50-64 65+ 5.2 Other data details to note You will be asked whether your dataset includes an ‘All cancers’ category — a row that summarizes the total number of diagnoses or deaths across all cancer types. We strongly recommend including this in your dataset. If you do not supply an ‘All cancers’ category, one will be created automatically by summing across the cancer types you provide. If your dataset is not comprehensive (i.e., it only includes a subset of cancer types), then the generated ‘All cancers’ total may be misleading, since it won’t reflect the true overall cancer burden. If your dataset includes nested cancer categories (e.g., Gynecological cancers and Ovarian cancer), CaRDo requires an explicit ‘All cancers’ row. Without it, the dashboard will double count nested cancers during aggregation. It does not matter how sex is coded – you’ll be asked to define sex when loading your datasets. CaRDO will calculate counts for persons based on counts for males and females – you do not need to supply data for persons (males + females). By default, counts below 5 will be suppressed. These data points will appear as ‘insufficient data’ in the dashboard. You will have the option to set a custom suppression threshold. Where low counts can be reverse engineered by comparing counts across conditions, all related counts will be suppressed. For example, if thyroid cancer counts for men for a given year are below 5, but counts for women are available, both men’s and total (persons) will be suppressed, as the men’s count could be deduced by subtracting women from the total. If you have additional data to include in your dashboard, such as mortality data, stick with us for just a moment longer — we’ll walk you through how to Expand Your Dashboard in the next section. Otherwise, if your dataset looks like the example above and you have no further data to add, then you’re ready to launch CaRDO and begin building your own dashboard using the following command. CaRDO::create_dashboard() For guidance navigating the CaRDO user interface, return to launch CaRDO and follow the steps. If you’ve finished building your CaRDO dashboard, learn how to publish it online here. Expand Your Dashboard Publishing "],["expand-your-dashboard.html", "Chapter 6 Expand Your Dashboard 6.1 Cancer mortality data 6.2 Age-standardised rates - population data 6.3 Other data details to note", " Chapter 6 Expand Your Dashboard 6.1 Cancer mortality data If you have cancer mortality data, CaRDO will add a mortality statistics page to your dashboard. The data requirements and processes for loading cancer mortality data are identical to those we’ve described for cancer incidence data. You must have a single column for each variable and outcome you wish to report, and each row in your dataset should correspond to a unique combination of each variable. Cancer-type values must be coded as you wish them to be displayed. Cancer deaths must be aggregated by 5-year age groups, with age groups coded numerically from 1 – 18. The interface will ask you to load in a cancer incidence and mortality file separately. However, whether you store mortality data in a separate data file, or as an additional column in your incidence data file (and load the file twice) does not matter. 6.2 Age-standardised rates - population data If you wish to report age-standardised cancer rates, you must provide a population file that corresponds to the area your cancer data covers—for example, a specific country, state or province, city, or health region. Population data should be organised by 5-year age groups, year, and sex, and otherwise be structured the same as your incidence data. See example below (variable names do not matter). Year Sex Age.group Population 2013 2 1 6332 2014 1 1 7541 2015 2 6 8544 2016 2 14 12632 2017 1 11 9198 6.3 Other data details to note CaRDO will calculate age-standardised rates using a standard population that you will specify from a list of options. The default standard population is the World Standard Population. As with incidence and mortality, it is not necessary that your population file contains population data for persons. Rates will be suppressed where low count data has been suppressed. You’re now ready to launch CaRDO and begin building your own dashboard using the following command. CaRDO::create_dashboard() For guidance navigating the CaRDO user interface, return to launch CaRDO and follow the steps. When you’ve finished building your CaRDO dashboard, learn how to publish it online here. Publishing "],["publishing.html", "Chapter 7 Publishing 7.1 Publishing with Shinyapps.io", " Chapter 7 Publishing Once you have created a dashboard, you will need to decide how to publish it to allow users to access your dashboard and explore cancer patterns and trends. There are several options available, however, we recommend using shinyapps.io. ShinyApps.io is a cloud-based hosting platform by Posit that allows users to easily deploy (within R) and share Shiny applications online without requiring server management. It offers multiple pricing tiers, including a free option, making it an accessible choice for individuals and small organizations. ShinyApps.io does have security limitations that you should be aware of - ShinyApps.io applications are run in a shared environment. This means that data flows outside of your infrastructure to reach the platform. For this reason, we do not recommend Shinyapps.io for highly sensitive data. This is why we stress confirming that your data is fit for public consumption before publishing your dashboard, and why CaRDO is specifically designed to handle sensitive data locally, before it is published. Cancer Council Queensland uses ShinyApps.io to publish our cancer statistics dashboard. A detailed summary of alternative publishing options and their strengths and limitations is available here 7.1 Publishing with Shinyapps.io A detailed guide to setting up a Shinyapps.io account and deploying your dashboard is published here. Deployment instructions are also provided upon account setup. Below we provide a summary of the key steps to follow. Step 1 - rsconnect Shinyapps.io requires the latest version of rsconnect. Install the rsconnect package by running the following command in your Rstudio console. install.packages(&#39;rsconnect&#39;) Once installed, load rsconnect into your R session. library(rsconnect) Step 2 - setup account To publish your dashboard through shinyapps.io you will need to sign up for an account. By default, all Shinyapps.io accounts are free with the option to upgrade to a paid service (more on this later). The first time you sign in, Shinyapps.io will prompt you to specify an account name. Shinyapps.io uses the account name as the domain name for all of your applications. Important: Shinyapps.io uses the account name you specify as the domain name for all your applications. Meaning, your account name will appear in the URL for your dashboard - for this reason, we recommend making your account name something relevant to your registry or organisation. Step 3 - authorize Once you have setup an account, you will need to configure the rsconnect package to authorize your account. Shinyapps.io provides instructions on how to do this once you’ve setup an account. Copy and paste the R code shown in field into your R console and run the code. Step 4 - deploy/publish You’re now ready to publish your CaRDO dashboard - there are two methods. You may run the following code, or alternatively, you may click the publish icon ( ) in the top right corner, next to run. rsconnect::deployApp(&#39;path/to/your/app&#39;) Select the files to be published: Broadly, these will include your app.R file, any other data files, and any image and css (www folder) files. The specific files required for CaRDO are the following: app.R load_data.R module.R Data www Give your dashboard a name (this will appear in the URL!) and hit Publish - this will take a moment. And you’re done. Your cancer dashboard is ready to share! 7.1.1 Pricing Shinyapps.io has a range of paid plans to suit different needs when deploying Shiny applications. By default, users can start with the free tier, which allows limited deployment with restrictions on active hours and resources. You can find more details on pricing tiers and available services here 7.1.2 And that’s a wrap! Your CaRDO dashboard is ready to share - communicate timely, population-level cancer statistics with clarity and purpose. Sharing this data helps raise awareness of cancer trends, highlight disparities, and inform evidence-based action across research, policy, and care. The remainder of this handbook provides details on updating your CaRDO dashboard when new cancer data becomes available, CaRDO methods, references, and citation &amp; Contact information. Once again, please reach out to us at statistics@cancerqld.org.au if you have any questions, concerns or feedback - we’d love to hear from you. Thank you for using CaRDO. Updating Your Dashboard Methods References Citation &amp; Contact "],["quick-setup.html", "Chapter 8 Quick setup", " Chapter 8 Quick setup For those with R experience and no time for manuals. 1. CaRDO requires the following packages installed before launching install.packages(&quot;devtools&quot;) install.packages(&quot;tidyverse&quot;) install.packages(&quot;plotly&quot;) install.packages(&quot;markdown&quot;) There are three key requirements for all cancer datasets loaded into CaRDO. You must have a single column for each variable and outcome you wish to report, and each row in your dataset should correspond to a unique combination of each variable Cancer-type values must be coded as you wish them to be displayed Cancer and population data must be aggregated by 5-year age groups, with age groups coded numerically from 1 – 18. Download CaRDO from GitHub using devtools::install_github(&quot;https://github.com/CCQResearch/CaRDO&quot;) Load CaRDO using CaRDO::create_dashboard() Follow the prompts and build your dashboard Load your data - (example datasets available here) Specify your variables Personalise your dashboard Open your app.R file and run the script. file.edit(&#39;your/working/directory/app.R&#39;) "],["updating-your-dashboard.html", "Chapter 9 Updating Your Dashboard", " Chapter 9 Updating Your Dashboard Updating your CaRDO dashboard when new cancer data is available is straightforward. It simply requires repeating the steps outlined on the CaRDO Example and Publishing pages each time a new cancer extract is available. Laucch CaRDO using the command below and load your new cancer data when prompted by the interface - the same steps you previously worked through to build your CaRDO dashboard. CaRDO::create_dashboard() We recommend publishing updates to a draft / testing version to inspect for errors or inconsistencies before updating the public facing dashboard. Once you’re comfortable with the update, republish the testing version to the public facing dashboard. For example, if your dashboard is called ‘/CaRDOExample’, you might initially publish your update to a second dashboard called ‘/CaRDOExample_draft’ and keep that link internal. Once you’re confident the data in the dashboard is accurate, then republish the update to your primary dashboard ‘/CaRDOExample’. In addition to updating cancer data, be sure to update any population files that may require updating when new cancer data becomes available. "],["methods.html", "Chapter 10 Methods 10.1 Age-standardized rates 10.2 Lifetime risk 10.3 Incidence &amp; mortality trends 10.4 Sex specific cancers 10.5 Data Privacy 10.6 Packages 10.7 Example Datasets", " Chapter 10 Methods 10.1 Age-standardized rates Age-standardised rates attempt to adjust for variation in age structures in different populations (either different geographical areas or the same population across time). There are two methods of age-standardisation – direct and indirect. All cancer diagnoses and cancer deaths trends were calculated using directly standardised rates. The method involves applying age-specific rates from the population of interest (i.e. your catchment) to a standard population, which in CaRDO is the World Standard Population by default. Five-year age groups up to 85-years-and-above were used for all age-standardized rate calculations. Note: if not all 18 age groups are supplied, the standard population is re-weighted according to your supplied age groups. 10.2 Lifetime risk Cumulative risk is a measure used to estimate the risk of developing or dying of cancer up to a specific age. It takes into account the removal of persons from the population of interest who have already been diagnosed with or died from cancer. Commonly expressed as a ‘1 in n’ proportion, the cumulative risk is calculated as: \\[n = \\frac{1}{1-\\exp(-5\\sum a_j\\times\\frac{100}{100,000})}\\] where \\(a_j\\) are the age-specific rates (5-year age groups) per 100,000 for ages 0 – to your specific age group, for example 85. CaRDO provides the cumulative risk up to the age 85 as an approximation of lifetime risk. An x in 100 variation is also supplied, calculated as the inverse of the cumulative risk multiplied by 100. These calculations assume that the person experiences the current age-specific risk rates up to the age specified (e.g. 85), so do not account for any specific risk factors (such as smoking). 10.3 Incidence &amp; mortality trends Incidence and mortality trends were calculated by fitting piece-wise functions, composed of splines and linear models, to the data. Break points were identified using the strucchange package (Zeileis et al. 2002), specifically the function breakpoints() (Zeileis et al. 2003). The data was then segmented by these breakpoints. A maximum number of 3 breakpoints were set, with a minimum number of 5 observations within each segment. Then, a spline and linear model was fit to each segment using the mgcv package (Wood 2003). The model with the lowest AIC was chosen for each given segment. 10.4 Sex specific cancers CaRDO does not inherently know which cancer types are sex-specific based on the data you load. Since accurate rate calculations require matching the denominator (population count) to the appropriate sex, CaRDO determines sex specificity by scanning the dataset for sex codes by cancer type across all years. If a cancer type has data for only one sex, it is classified as sex-specific. For example, because prostate cancer occurs only in males and is absent from female data, CaRDO knows to calculate rates using the male population as the denominator rather than the total population. It is important to note that this method does not distinguish between truly sex-specific cancers and cases where data for one sex is simply absent due to low numbers. Where data is absent due to low counts, CaRDO will misclassify the cancer type as sex-specific and calculate the rate using the incorrect denominator (population count). If this unlikely scenario arises, in the short term, we recommend removing cancer types from your dataset that are not sex-specific but where data is only available for one sex. For an alternative solution, please reach out to us at statistics@cancerqld.org.au 10.5 Data Privacy Data loaded into CaRDO areis stored locally on your computer, and all analyses are performed locally. Your data will not leave your computer while using CaRDO – CaRDO has been designed with data privacy as a top priority. The process of loading data into CaRDO is no different to loading data into RStudio on your local computer. In fact, that is what all that is happening - CaRDO loads data into the RStudio environment and carries out data processing locally on your machine using R. It is perfectly safe to load sensitive data into CaRDO as you would into any other data software. Once CaRDO has finished data processing, it will create a series of summary data files used for the creation of the dashboard. We encourage you to inspect these data files if you have any concerns. Suppression of sensitive data (low counts) is discussed in the Data Requirements section. Important: If you choose to publish your dashboard (e.g., share it online), data will be uploaded to the internet (made public) at the resolution that it appears in the CaRDO dashboard. It is your responsibility to ensure that all displayed data is appropriate for sharing before publishing publicly. 10.6 Packages CaRDO was built using the following R packages: shiny software package for R (Chang et al. (2025)) tidyverse (Wickham et al. (2019)) bslib (Sievert, Cheng, and Aden-Buie (2025)) shinywidgets (Perrier, Meyer, and Granjon (2025)) plotly (Sievert (2020)) markdown (Xie, Allaire, and Horner (2024)) strucchange (Zeileis et al. (2002)) segmented (Muggeo (2008)) 10.7 Example Datasets Below are the three example datasets used in the CaRDO example. These are fictional datasets intended to illustrate how cancer incidence, mortality, and population data should be structured for CaRDO. Cancer Incidence Dataset: An example dataset containing cancer diagnoses by cancer type, year, sex, and 5-year age group. Cancer Mortality Dataset: An example dataset containing cancer deaths by cancer type, year, sex, and 5-year age group. Population Dataset: An example dataset containing population estimates by year, sex, and 5-year age group, which can be used for calculating cancer age-standardised rates. "],["references.html", "Chapter 11 References", " Chapter 11 References Chang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke, Yihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, and Barbara Borges. 2025. Shiny: Web Application Framework for r. https://shiny.posit.co/. Muggeo, Vito M. R. 2008. “Segmented: An r Package to Fit Regression Models with Broken-Line Relationships.” R News 8 (1): 20–25. https://cran.r-project.org/doc/Rnews/. Perrier, Victor, Fanny Meyer, and David Granjon. 2025. shinyWidgets: Custom Inputs Widgets for Shiny. https://CRAN.R-project.org/package=shinyWidgets. Sievert, Carson. 2020. Interactive Web-Based Data Visualization with r, Plotly, and Shiny. Chapman; Hall/CRC. https://plotly-r.com. Sievert, Carson, Joe Cheng, and Garrick Aden-Buie. 2025. Bslib: Custom ’Bootstrap’ ’Sass’ Themes for ’Shiny’ and ’Rmarkdown’. https://CRAN.R-project.org/package=bslib. Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain Françoi, Garrett Grolemun, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686. Wood, S. N. 2003. “Thin-Plate Regression Splines.” Journal of the Royal Statistical Society (B) 65 (1): 95–114. Xie, Yihui, JJ Allaire, and Jeffrey Horner. 2024. Markdown: Render Markdown with ’Commonmark’. https://CRAN.R-project.org/package=markdown. Zeileis, Achim, Christian Kleiber, Walter Krämer, and Kurt Hornik. 2003. “Testing and Dating of Structural Changes in Practice.” Computational Statistics &amp; Data Analysis 44 (1–2): 109–23. https://doi.org/10.1016/S0167-9473(03)00030-6. Zeileis, Achim, Friedrich Leisch, Kurt Hornik, and Christian Kleiber. 2002. “Strucchange: An r Package for Testing for Structural Change in Linear Regression Models.” Journal of Statistical Software 7 (2): 1–38. https://doi.org/10.18637/jss.v007.i02. "],["citation-contact.html", "Chapter 12 Citation &amp; Contact", " Chapter 12 Citation &amp; Contact CaRDO has been developed by researchers from Cancer Council Queensland (“CCQ”) using Shiny for R. Please reach out to us at statistics@cancerqld.org.au with any questions, concerns or feedback you may have - we’d love to hear from you. If you wish to customize your dashboard beyond what is made available in this document, please contact us to discuss the possibilities. We kindly ask that you cite CaRDO on the methods page of your CaRDO dashboard, or anywhere that you showcase the dashboard, using the following citation. CaRDO (https://github.com/CCQResearch/CaRDO). Cancer Council Queensland: The Viertel Cancer Research Centre. Version 06-2025. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
